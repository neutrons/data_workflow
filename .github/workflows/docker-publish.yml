name: Docker

on:
  push:
    branches: [ qa ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create tag version
        id: version
        run: echo "::set-output name=version::$(git describe --tags --abbrev=0).b$(date +'%Y%m%d%H%M')"

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          mamba-version: "*"
          environment-file: conda_environment.yml

      - name: Install dev requirements
        run: mamba env update --file conda_development.yml

      - name: Build wheels
        run: make wheel/dasmon wheel/webmon wheel/workflow

      - name: Build test data for autoreducer
        run: make SNSdata.tar.gz

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push amq_test_gen
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.amq_test_gen
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}/amq_test_gen:latest-test
            ${{ env.REGISTRY }}/${{ github.repository }}/amq_test_gen:${{ steps.version.outputs.version }}
          push: true

      - name: Build and push Autoreducer
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.autoreducer
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}/autoreducer:latest-test
            ${{ env.REGISTRY }}/${{ github.repository }}/autoreducer:${{ steps.version.outputs.version }}
          push: true

      - name: Build and push Catalog
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.catalog
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}/catalog:latest-test
            ${{ env.REGISTRY }}/${{ github.repository }}/catalog:${{ steps.version.outputs.version }}
          push: true

      - name: Build and push Dasmon
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.dasmon
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}/dasmon:latest-test
            ${{ env.REGISTRY }}/${{ github.repository }}/dasmon:${{ steps.version.outputs.version }}
          push: true

      - name: Build and push pv_test_gen
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.pv_test_gen
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}/pv_test_gen:latest-test
            ${{ env.REGISTRY }}/${{ github.repository }}/pv_test_gen:${{ steps.version.outputs.version }}
          push: true

      - name: Build and push Webmon
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.webmon
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}/webmon:latest-test
            ${{ env.REGISTRY }}/${{ github.repository }}/webmon:${{ steps.version.outputs.version }}
          push: true

      - name: Build and push Workflow
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.workflow
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}/workflow:latest-test
            ${{ env.REGISTRY }}/${{ github.repository }}/workflow:${{ steps.version.outputs.version }}
          push: true

      - name: Trigger ORNL Deployment Pipeline
        run: curl -X POST -F token=${{ secrets.GITLAB_TRIGGER_TOKEN }} -F ref=main https://code.ornl.gov/api/v4/projects/10858/trigger/pipeline | jq '. | del( .user )'
