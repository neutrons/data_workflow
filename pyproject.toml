[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ASYNC","E", "F", "I", "UP032", "W"]
ignore = ["E402", "F405"]

[tool.pytest.ini_options]
pythonpath = ["src/", "src/dasmon_app", "src/webmon_app", "src/workflow_app"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]

[tool.pixi.dependencies]
python = "==3.11"
django = "=4.2"
python-ldap = ">=3.1"
"stomp.py" = "8.*"
django-health-check = "*"
versioningit = ">=3.2.0"
psycopg2-binary = "==2.9.3"

[tool.pixi.pypi-dependencies]
django-auth-ldap = "==5.1.0"

[tool.pixi.workspace]
name = "data_workflow"
channels = ["conda-forge", "oncat"]
platforms = ["linux-64"]

[tool.pixi.tasks]
unittests = { cmd = "python -m pytest src", env = { DJANGO_SETTINGS_MODULE = "reporting.reporting_app.settings.unittest" } }
unittests-with-coverage = { cmd = "python -m pytest --cov --cov-report=xml --cov-report=term src", env = { DJANGO_SETTINGS_MODULE = "reporting.reporting_app.settings.unittest" } }
systemtests = { cmd = "python -m pytest tests", env = { DJANGO_SETTINGS_MODULE = "reporting.reporting_app.settings.envtest", LDAP_SERVER_URI = ".", LDAP_DOMAIN_COMPONENT = ".", LIVE_PLOT_SECRET_KEY = "secretKey"} }
build-docs ="cd docs & make html"

[tool.pixi.environments]
default = { features = [
  "dev",
  "docs",
  "test",
  "build"
], solve-group = "default" }
docs = { features = ["docs"]}
test = { features = ["test"]}
webmon = { features = ["webmon", "build"]}
dasmon = { features = ["dasmon", "build"]}
workflow = { features = ["dasmon", "build"]}

[tool.pixi.feature.dev.dependencies]
pre-commit = ">=4.2.0"

[tool.pixi.feature.test.dependencies]
pytest = ">=8.4.1"
pytest-django = "*"
pytest-cov = "*"
lxml = "*"
python-dotenv = "*"
pyoncat = "*"

[tool.pixi.feature.docs.dependencies]
sphinx = ">=8"
sphinx_rtd_theme = ">=3.0.1"
sphinxcontrib-mermaid = "*"

[tool.pixi.feature.build.dependencies]
python-build = "*"
pip = "*"
wheel = "*"
check-wheel-contents = "*"
make = "*"

[tool.pixi.feature.webmon.dependencies]
gunicorn = "*"
pyoncat = "*"

[tool.pixi.feature.dasmon.dependencies]
psutil = "*"
