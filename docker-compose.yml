version: '3.8'

services:

  nginx:
    image: nginx:1.21.1
    ports:
      - "80:80"
    volumes:
      - web-static:/var/www/workflow/static
      - ./nginx/django.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
    depends_on:
      webmon:
        condition: service_healthy

  webmon:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.webmon
      # build using the host's network, required in certain environments when accessing the debian repositories
    volumes:
      - web-static:/var/www/workflow/static/
    env_file:
      - .env
      - .env.ci
    environment:
      - LDAP_SERVER_URI=${LDAP_SERVER_URI}
      - LDAP_DOMAIN_COMPONENT=${LDAP_DOMAIN_COMPONENT}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - CATALOG_URL=${CATALOG_URL}
      - CATALOG_ID=${CATALOG_ID}
      - CATALOG_SECRET=${CATALOG_SECRET}
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8000/ht || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    depends_on:
      db:
        condition: service_healthy

  dasmon:
    build:
      context: .
      dockerfile: Dockerfile.dasmon
    env_file:
      - .env
    command: /usr/bin/docker-entrypoint.sh
    healthcheck:
      test: ["CMD", "dasmon_listener", "status"]
    depends_on:
      activemq:
        condition: service_healthy
      webmon:
        condition: service_healthy

  workflow:
    build:
      context: .
      dockerfile: Dockerfile.workflow
    env_file:
      - .env
    command: /usr/bin/docker-entrypoint.sh
    healthcheck:
      test: ["CMD", "workflowmgr", "status"]
    depends_on:
      activemq:
        condition: service_healthy
      webmon:
        condition: service_healthy

  db:
    restart: always
    image: postgres:14
    env_file:
      - .env
    environment:
      # variables DATABASE_* should be initialized in .env file
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASS}
    ports:
      # DATABASE_PORT should be initialized in .env file
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  activemq:
    image: rmohr/activemq
    hostname: activemq
    volumes:
      - ./src/workflow_app/workflow/icat_activemq.xml:/opt/activemq/conf/activemq.xml
    healthcheck:
      test: "curl --silent --show-error -u admin:admin 'http://localhost:8161/api/jolokia/read/org.apache.activemq:type=Broker,brokerName=localhost,service=Health' | grep --silent -e 'Good' -e 'Getting Worried'"
      interval: 5s
      timeout: 5s
      retries: 5

  autoreducer:
    build:
      context: .
      dockerfile: Dockerfile.autoreducer
    ports:
      - "8888:8888"
    hostname: autoreducer
    healthcheck:
      test: ["CMD", "pgrep", "python"]
    depends_on:
      activemq:
        condition: service_healthy

  amq_test_gen:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.amq_test_gen
    depends_on:
      activemq:
        condition: service_healthy

  amq_pv_gen:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.pv_test_gen
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      webmon:
        condition: service_healthy

  catalog_process:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.catalog
    environment:
      ICAT_USER: "icat"
      ICAT_PASSCODE: "icat"
      ACTIVE_MQ_PORTS: 61613
    depends_on:
      activemq:
        condition: service_healthy

  autoheal:
    restart: always
    image: willfarrell/autoheal
    environment:
      AUTOHEAL_CONTAINER_LABEL: all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  web-static:
  pgdata:
