services:

  nginx:
    image: nginx:1.21.1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-static:/var/www/workflow/static
      - web-static-livedata:/var/www/livedata/static
      - ./nginx/django.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.crt:/etc/nginx/nginx.crt
      - ./nginx/nginx.key:/etc/nginx/nginx.key
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
    depends_on:
      webmon:
        condition: service_healthy
    networks:
      default:
        ipv4_address: 172.16.238.222

  webmon:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.webmon
    volumes:
      - web-static:/var/www/workflow/static/
      # add in folder to be picked up by update-ca-certificates in docker entrypoint
      - ./nginx/nginx.crt:/usr/local/share/ca-certificates/nginx.crt
    env_file:
      - .env
      - .env.ci
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - LOAD_INITIAL_DATA=${LOAD_INITIAL_DATA-true}
      - LDAP_SERVER_URI=${LDAP_SERVER_URI}
      - LDAP_DOMAIN_COMPONENT=${LDAP_DOMAIN_COMPONENT}
      - CATALOG_URL=${CATALOG_URL}
      - CATALOG_API_TOKEN=${CATALOG_API_TOKEN}
      - GUNICORN_CMD_ARGS=--reload --workers=8
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8000/ht || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    depends_on:
      db:
        condition: service_healthy

  dasmon:
    build:
      context: .
      dockerfile: Dockerfile.dasmon
    env_file:
      - .env
    command: /usr/bin/docker-entrypoint.sh
    healthcheck:
      test: ["CMD", "dasmon_listener", "status"]
    depends_on:
      activemq:
        condition: service_healthy
      webmon:
        condition: service_healthy

  workflow:
    build:
      context: .
      dockerfile: Dockerfile.workflow
    env_file:
      - .env
    command: /usr/bin/docker-entrypoint.sh
    healthcheck:
      test: ["CMD", "workflowmgr", "status"]
    depends_on:
      activemq:
        condition: service_healthy
      webmon:
        condition: service_healthy

  db:
    restart: always
    image: postgres:14
    env_file:
      - .env
    environment:
      # variables DATABASE_* should be initialized in .env file
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASS}
    ports:
      # DATABASE_PORT should be initialized in .env file
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  activemq:
    user: root
    image: apache/activemq-artemis:latest-alpine
    hostname: activemq
    ports:
      - 8161:8161
      - 61613:61613
    volumes:
      - ./config/artemis:/var/lib/artemis-instance/etc-override
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8161 || exit 1
      interval: 5s
      timeout: 5s
      retries: 5

  autoreducer:
    build:
      context: .
      dockerfile: Dockerfile.autoreducer
      args:
        CONFIG_FILE: ./tests/configuration/post_process_consumer.conf
    hostname: autoreducer
    healthcheck:
      test: ["CMD", "pgrep", "queueProcessor"]
    depends_on:
      activemq:
        condition: service_healthy

  autoreducer_himem:
    build:
      context: .
      dockerfile: Dockerfile.autoreducer
      args:
        CONFIG_FILE: ./tests/configuration/post_process_consumer.himem.conf
    hostname: autoreducer.himem
    healthcheck:
      test: ["CMD", "pgrep", "queueProcessor"]
    depends_on:
      activemq:
        condition: service_healthy

  # Generator of AMQ messages and VP updates
  # https://webmonchow.readthedocs.io/en/latest/index.html
  webmonchow:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.webmonchow
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      webmon:
        condition: service_healthy
      activemq:
        condition: service_healthy

  livedata:
    restart: always
    image: ghcr.io/neutrons/live_data_server/live_data_server:latest-dev
    env_file:
      - .env
    environment:
      DJANGO_SUPERUSER_USERNAME: ${DATABASE_USER}
      DJANGO_SUPERUSER_PASSWORD: ${DATABASE_PASS}
    volumes:
      - web-static-livedata:/var/www/livedata/static
      - ./config/livedata_local_settings.py:/var/www/livedata/app/local_settings.py
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8000/admin || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    depends_on:
      db:
        condition: service_healthy
      webmon:
        condition: service_healthy

  autoheal:
    restart: always
    image: willfarrell/autoheal
    environment:
      AUTOHEAL_CONTAINER_LABEL: all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  web-static:
  web-static-livedata:
  pgdata:


networks:
  default:
    ipam:
      config:
        - subnet: 172.16.238.0/24
